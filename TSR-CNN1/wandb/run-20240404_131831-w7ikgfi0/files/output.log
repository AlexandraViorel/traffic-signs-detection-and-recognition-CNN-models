
Epoch 1/50
D:\Faculty materials\BACHELORS-THESIS\.venv\lib\site-packages\keras\src\layers\convolutional\base_conv.py:99: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.
  super().__init__(
D:\Faculty materials\BACHELORS-THESIS\.venv\lib\site-packages\keras\src\trainers\data_adapters\py_dataset_adapter.py:120: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.
  self._warn_if_super_not_called()










































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m92s[22m 181ms/step - accuracy: 0.1594 - loss: 3.3961 - val_accuracy: 0.0533 - val_loss: 6.1965
Epoch 2/50











































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m91s[22m 185ms/step - accuracy: 0.5086 - loss: 1.5742 - val_accuracy: 0.0533 - val_loss: 8.3217
Epoch 3/50











































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m92s[22m 187ms/step - accuracy: 0.7140 - loss: 0.9358 - val_accuracy: 0.0677 - val_loss: 21.4071
Epoch 4/50













































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m96s[22m 195ms/step - accuracy: 0.8026 - loss: 0.6642 - val_accuracy: 0.4449 - val_loss: 3.8937
Epoch 5/50















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m99s[22m 201ms/step - accuracy: 0.8440 - loss: 0.5361 - val_accuracy: 0.0842 - val_loss: 8.8484
Epoch 6/50
















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m100s[22m 203ms/step - accuracy: 0.8696 - loss: 0.4803 - val_accuracy: 0.2781 - val_loss: 5.4992
Epoch 7/50















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m100s[22m 203ms/step - accuracy: 0.8985 - loss: 0.3952 - val_accuracy: 0.0064 - val_loss: 63.2543
Epoch 8/50















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m100s[22m 203ms/step - accuracy: 0.8669 - loss: 0.5495 - val_accuracy: 0.0435 - val_loss: 193.5708
Epoch 9/50















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m100s[22m 202ms/step - accuracy: 0.8967 - loss: 0.4307 - val_accuracy: 0.9158 - val_loss: 0.3629
Epoch 10/50















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m100s[22m 203ms/step - accuracy: 0.9031 - loss: 0.4345 - val_accuracy: 0.8456 - val_loss: 0.9892
Epoch 11/50















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m100s[22m 203ms/step - accuracy: 0.9070 - loss: 0.4023 - val_accuracy: 0.9740 - val_loss: 0.1059
Epoch 12/50















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m100s[22m 203ms/step - accuracy: 0.9184 - loss: 0.3557 - val_accuracy: 0.8907 - val_loss: 0.4834
Epoch 13/50















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m100s[22m 202ms/step - accuracy: 0.9155 - loss: 0.3646 - val_accuracy: 0.8217 - val_loss: 0.8023
Epoch 14/50















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m100s[22m 203ms/step - accuracy: 0.9080 - loss: 0.4244 - val_accuracy: 0.9120 - val_loss: 0.4518
Epoch 15/50















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m100s[22m 202ms/step - accuracy: 0.9125 - loss: 0.4241 - val_accuracy: 0.8727 - val_loss: 0.5980
Epoch 16/50















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m100s[22m 204ms/step - accuracy: 0.9270 - loss: 0.3493 - val_accuracy: 0.8995 - val_loss: 0.4573
Epoch 17/50















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m100s[22m 202ms/step - accuracy: 0.9168 - loss: 0.4163 - val_accuracy: 0.4814 - val_loss: 2.9450
Epoch 18/50















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m100s[22m 203ms/step - accuracy: 0.9296 - loss: 0.3522 - val_accuracy: 0.9237 - val_loss: 0.3180
Epoch 19/50















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m100s[22m 202ms/step - accuracy: 0.9072 - loss: 0.4935 - val_accuracy: 0.6109 - val_loss: 1.7372
Epoch 20/50















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m100s[22m 203ms/step - accuracy: 0.9257 - loss: 0.3633 - val_accuracy: 0.8911 - val_loss: 0.7007
Epoch 21/50

















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m101s[22m 205ms/step - accuracy: 0.9288 - loss: 0.3711 - val_accuracy: 0.7659 - val_loss: 1.1221
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.