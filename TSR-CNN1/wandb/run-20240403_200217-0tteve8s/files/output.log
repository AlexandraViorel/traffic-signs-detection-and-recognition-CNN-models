D:\Faculty materials\BACHELORS-THESIS\.venv\lib\site-packages\keras\src\layers\convolutional\base_conv.py:99: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.
  super().__init__(
Epoch 1/50
D:\Faculty materials\BACHELORS-THESIS\.venv\lib\site-packages\keras\src\trainers\data_adapters\py_dataset_adapter.py:120: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.
  self._warn_if_super_not_called()




















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m115s[22m 227ms/step - accuracy: 0.0780 - loss: 3.7646 - val_accuracy: 0.1525 - val_loss: 3.4422
Epoch 2/50





















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m113s[22m 230ms/step - accuracy: 0.2699 - loss: 2.7480 - val_accuracy: 0.3076 - val_loss: 2.5776
Epoch 3/50




















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m111s[22m 225ms/step - accuracy: 0.3866 - loss: 2.1697 - val_accuracy: 0.4096 - val_loss: 2.0635
Epoch 4/50




















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m111s[22m 226ms/step - accuracy: 0.4774 - loss: 1.7904 - val_accuracy: 0.7175 - val_loss: 0.9853
Epoch 5/50























































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m119s[22m 242ms/step - accuracy: 0.5505 - loss: 1.4879 - val_accuracy: 0.6751 - val_loss: 1.0115
Epoch 6/50




















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m111s[22m 224ms/step - accuracy: 0.6157 - loss: 1.2622 - val_accuracy: 0.8275 - val_loss: 0.6344
Epoch 7/50



















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m110s[22m 223ms/step - accuracy: 0.6669 - loss: 1.0633 - val_accuracy: 0.8750 - val_loss: 0.4624
Epoch 8/50




















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m110s[22m 223ms/step - accuracy: 0.7119 - loss: 0.9208 - val_accuracy: 0.7798 - val_loss: 0.6776
Epoch 9/50











































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m110s[22m 223ms/step - accuracy: 0.7488 - loss: 0.7990 - val_accuracy: 0.8430 - val_loss: 0.5353
Epoch 10/50



















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m121s[22m 245ms/step - accuracy: 0.7767 - loss: 0.7035 - val_accuracy: 0.8817 - val_loss: 0.3731
Epoch 11/50




















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m112s[22m 226ms/step - accuracy: 0.8049 - loss: 0.6181 - val_accuracy: 0.9355 - val_loss: 0.2290
Epoch 12/50




















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m111s[22m 225ms/step - accuracy: 0.8246 - loss: 0.5506 - val_accuracy: 0.9323 - val_loss: 0.2560
Epoch 13/50





















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m114s[22m 231ms/step - accuracy: 0.8456 - loss: 0.4884 - val_accuracy: 0.8273 - val_loss: 0.5848
Epoch 14/50




















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m111s[22m 226ms/step - accuracy: 0.8587 - loss: 0.4437 - val_accuracy: 0.6617 - val_loss: 1.6450
Epoch 15/50






















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m115s[22m 233ms/step - accuracy: 0.8751 - loss: 0.3973 - val_accuracy: 0.8416 - val_loss: 0.5674
Epoch 16/50






















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m114s[22m 231ms/step - accuracy: 0.8773 - loss: 0.3752 - val_accuracy: 0.7895 - val_loss: 0.9054
Epoch 17/50





















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m114s[22m 230ms/step - accuracy: 0.8949 - loss: 0.3324 - val_accuracy: 0.9359 - val_loss: 0.2149
Epoch 18/50






















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m115s[22m 233ms/step - accuracy: 0.9058 - loss: 0.3006 - val_accuracy: 0.9422 - val_loss: 0.1927
Epoch 19/50



















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m109s[22m 221ms/step - accuracy: 0.9146 - loss: 0.2716 - val_accuracy: 0.7934 - val_loss: 0.9068
Epoch 20/50



















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m109s[22m 221ms/step - accuracy: 0.9193 - loss: 0.2601 - val_accuracy: 0.9309 - val_loss: 0.2169
Epoch 21/50



















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m110s[22m 223ms/step - accuracy: 0.9241 - loss: 0.2417 - val_accuracy: 0.8230 - val_loss: 0.8839
Epoch 22/50




















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m110s[22m 222ms/step - accuracy: 0.9314 - loss: 0.2206 - val_accuracy: 0.5404 - val_loss: 3.0332
Epoch 23/50



















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m109s[22m 222ms/step - accuracy: 0.9328 - loss: 0.2163 - val_accuracy: 0.8169 - val_loss: 0.8007
Epoch 24/50




















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m111s[22m 226ms/step - accuracy: 0.9429 - loss: 0.1892 - val_accuracy: 0.8115 - val_loss: 0.7809
Epoch 25/50



















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m109s[22m 222ms/step - accuracy: 0.9442 - loss: 0.1805 - val_accuracy: 0.8452 - val_loss: 0.6702
Epoch 26/50




















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m109s[22m 221ms/step - accuracy: 0.9496 - loss: 0.1697 - val_accuracy: 0.8632 - val_loss: 0.4914
Epoch 27/50























































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m115s[22m 233ms/step - accuracy: 0.9513 - loss: 0.1598 - val_accuracy: 0.9714 - val_loss: 0.0901
Epoch 28/50






















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m115s[22m 233ms/step - accuracy: 0.9528 - loss: 0.1513 - val_accuracy: 0.8967 - val_loss: 0.3786
Epoch 29/50
























































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m117s[22m 238ms/step - accuracy: 0.9565 - loss: 0.1391 - val_accuracy: 0.9388 - val_loss: 0.2035
Epoch 30/50























































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m117s[22m 237ms/step - accuracy: 0.9576 - loss: 0.1337 - val_accuracy: 0.5390 - val_loss: 2.5997
Epoch 31/50























































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m116s[22m 234ms/step - accuracy: 0.9588 - loss: 0.1379 - val_accuracy: 0.6192 - val_loss: 1.8541
Epoch 32/50























































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m115s[22m 234ms/step - accuracy: 0.9602 - loss: 0.1295 - val_accuracy: 0.5288 - val_loss: 3.7978
Epoch 33/50





















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m114s[22m 232ms/step - accuracy: 0.9610 - loss: 0.1199 - val_accuracy: 0.3990 - val_loss: 2.9268
Epoch 34/50






















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m115s[22m 233ms/step - accuracy: 0.9636 - loss: 0.1136 - val_accuracy: 0.7345 - val_loss: 1.3953
Epoch 35/50






















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m115s[22m 232ms/step - accuracy: 0.9673 - loss: 0.1023 - val_accuracy: 0.5320 - val_loss: 2.8615
Epoch 36/50






















































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m114s[22m 232ms/step - accuracy: 0.9684 - loss: 0.0997 - val_accuracy: 0.4323 - val_loss: 5.7610
Epoch 37/50























































[1m491/491[22m [32m━━━━━━━━━━━━━━━━━━━━[39m [1m114s[22m 232ms/step - accuracy: 0.9682 - loss: 0.1010 - val_accuracy: 0.1644 - val_loss: 9.2165
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Traceback (most recent call last):
  File "D:\Faculty materials\BACHELORS-THESIS\TSR-CNN1\train.py", line 37, in train
    wandb.save(model_path)
  File "D:\Faculty materials\BACHELORS-THESIS\.venv\lib\site-packages\wandb\sdk\wandb_run.py", line 371, in wrapper_fn
    return func(self, *args, **kwargs)
  File "D:\Faculty materials\BACHELORS-THESIS\.venv\lib\site-packages\wandb\sdk\wandb_run.py", line 361, in wrapper
    return func(self, *args, **kwargs)
  File "D:\Faculty materials\BACHELORS-THESIS\.venv\lib\site-packages\wandb\sdk\wandb_run.py", line 1936, in save
    return self._save(
  File "D:\Faculty materials\BACHELORS-THESIS\.venv\lib\site-packages\wandb\sdk\wandb_run.py", line 1996, in _save
    wandb_path.symlink_to(path)
  File "C:\Users\alexs\AppData\Local\Programs\Python\Python310\lib\pathlib.py", line 1255, in symlink_to
    self._accessor.symlink(target, self, target_is_directory)
OSError: [WinError 1314] A required privilege is not held by the client: 'D:\\Faculty materials\\BACHELORS-THESIS\\TSR-CNN1\\TSRNet1\\models\\dandy-sweep-1.h5' -> 'D:\\Faculty materials\\BACHELORS-THESIS\\TSR-CNN1\\wandb\\run-20240403_200217-0tteve8s\\files\\TSRNet1\\models\\dandy-sweep-1.h5'